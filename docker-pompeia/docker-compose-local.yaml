version: '2.2'
services:
  ############### MICROSERVICES ############### 
  pompeia-render:
    container_name: pompeia-render
    image: governify/render:develop
    environment:
      - NODE_ENV=production
      - PORT=80
      - LAYOUT=bootstrap5.html
      - LOGIN_USER=${USER_RENDER:?}
      - LOGIN_PASSWORD=${PASS_RENDER:?}
      - DEFAULT_VIEW=http://host.docker.internal:5200/api/v1/public/renders/index/view.html
      - DEFAULT_CONTROLLER=http://host.docker.internal:5200/api/v1/public/renders/index/controller.js
      - DEFAULT_MODEL=http://host.docker.internal:5200/api/v1/public/renders/index/model.json
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
    volumes:
      - '../logs/render:/opt/app/logs'
    ports:
      - '5100:80'
    depends_on:
      - pompeia-assets-manager
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-assets-manager:
    container_name: pompeia-assets-manager
    image: 'governify/assets-manager:develop'
    environment:
      - NODE_ENV=production
      - PORT=80
      - LOGIN_USER=${USER_ASSETS:?}
      - LOGIN_PASSWORD=${PASS_ASSETS:?}
      - PRIVATE_KEY=${KEY_ASSETS_MANAGER_PRIVATE:?}
      - GOV_INFRASTRUCTURE=/home/project/public/infrastructure-local.yaml
      - ASSETS_REPOSITORY=https://github.com/governify/assets-pompeia
      - ASSETS_REPOSITORY_BRANCH=${ASSETS_REPOSITORY_BRANCH:?}
    volumes:
      - '../assets:/home/project'
    ports:
      - '5200:80'
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-reporter:
    container_name: pompeia-reporter
    image: governify/reporter:develop
    environment:
      - NODE_ENV=production
      - PORT=80
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
    volumes:
      - '../logs/pompeia-reporter:/opt/app/logs'
    ports:
      - '5300:80'
    mem_limit: 400m
    restart: 'unless-stopped'
    depends_on:
      - pompeia-assets-manager
      - pompeia-mongo-registry
      - pompeia-influx-reporter
  # ================================================
  pompeia-registry:
    container_name: pompeia-registry
    image: 'governify/registry:develop'
    environment:
      - NODE_ENV=production
      - PORT=80
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
    volumes:
      - '../logs/registry:/opt/app/logs'
      - '../static:/opt/app/public/static'
    ports:
      - '5400:80'
    depends_on:
      - pompeia-assets-manager
      - pompeia-mongo-registry
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-collector-events:
    container_name: pompeia-collector-events
    image: 'governify/collector-events:develop'
    environment:
      - NODE_ENV=production
      - PORT=80
      - KEY_SCOPE_MANAGER=${KEY_SCOPE_MANAGER}
      - KEY_GITHUB=${KEY_GITHUB}
      - KEY_PIVOTAL=${KEY_PIVOTAL}
      - KEY_TRAVIS_PUBLIC=${KEY_TRAVIS_PUBLIC}
      - KEY_TRAVIS_PRIVATE=${KEY_TRAVIS_PRIVATE}
      - KEY_HEROKU=${KEY_HEROKU}
      - KEY_CODECLIMATE=${KEY_CODECLIMATE}
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
    ports:
      - '5500:80'
    depends_on:
      - pompeia-assets-manager
      - pompeia-redis-ec
    mem_limit: 700m
    restart: 'unless-stopped'
  # ================================================
  pompeia-dashboard:
    container_name: pompeia-dashboard
    image: governify/dashboard:develop
    environment:
      - NODE_ENV=production
      - INFLUX_URL=http://host.docker.internal:5002
      - GF_PATHS_PLUGINS=/usr/share/grafana/plugins
    volumes:
      - 'pompeia-dashboard-volume:/var/lib/grafana'
    ports:
      - '5600:3000'
    depends_on:
      - pompeia-assets-manager
      - pompeia-reporter
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-director:
    container_name: pompeia-director
    image: 'governify/director:develop'
    environment:
      - INFLUXDB_BIND_ADDRESS=:8088
      - NODE_ENV=production
      - PORT=80
      - KEY_ASSETS_MANAGER_PRIVATE=${KEY_ASSETS_MANAGER_PRIVATE}
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
    ports:
      - '5800:80'
    depends_on:
      - pompeia-assets-manager
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-scope-manager:
    container_name: pompeia-scope-manager
    image: 'governify/scope-manager:develop'
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - NODE_ENV=production
      - PORT=80
      - KEY_ASSETS_MANAGER_PRIVATE=${KEY_ASSETS_MANAGER_PRIVATE}
      - KEY_SCOPE_MANAGER=${KEY_SCOPE_MANAGER}
      - KEY_HEROKU=${KEY_HEROKU}
      - KEY_PIVOTAL=${KEY_PIVOTAL}
      - KEY_GITHUB=${KEY_GITHUB}
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
    ports:
      - '5700:80'
    depends_on:
      - pompeia-assets-manager
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-join:
    container_name: pompeia-join
    image: 'governify/join-bluejay:develop'
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - KEY_GITHUB=${KEY_GITHUB}
      - NODE_ENV=development
      - PORT=80
    ports:
      - '6001:80'
    mem_limit: 400m
    restart: 'unless-stopped'
  ############### DATABASES ###############
  pompeia-influx-reporter:
    image: 'influxdb:1.8.4-alpine'
    container_name: pompeia-influx-reporter
    environment:
      - INFLUXDB_BIND_ADDRESS=:8088
    volumes:
      - 'pompeia-influx-reporter-volume:/var/lib/influxdb'
      - '../configurations/influxdb:/etc/influxdb'
    ports:
      - "5002:8086"
      - "8088:8088"
    mem_limit: 1200m
    restart: 'unless-stopped'
  # ================================================
  pompeia-mongo-registry:
    container_name: pompeia-mongo-registry
    image: mongo
    volumes:
      - 'pompeia-mongo-registry-volume:/data/db'
    ports:
      - "5001:27017"
    mem_limit: 2000m
    restart: 'unless-stopped'
  # ================================================
  pompeia-redis-ec:
    container_name: pompeia-redis-ec
    image: redis
    volumes:
      - 'pompeia-redis-ec-volume:/data'
    ports:
      - "5003:6379"
    mem_limit: 1200m
    restart: 'unless-stopped'
volumes:
  pompeia-influx-reporter-volume: null
  pompeia-mongo-registry-volume: null
  pompeia-dashboard-volume: null
  pompeia-redis-ec-volume: null
