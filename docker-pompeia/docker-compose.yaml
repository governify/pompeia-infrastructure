version: '2.2'
services:
  pompeia-governify-states-exporter:
    container_name: pompeia-governify-states-exporter
    image: alesancor1/governify-states-exporter
    environment:
      - MONGO_URL=mongodb://pompeia-mongo-registry:27017
      - NODE_ENV=production
      - PORT=80
    networks:
      - governify-pompeia

  # Exporter (exporters defined here are external to pompeia infrastructure)
  pompeia-nginx-exporter:
    container_name: pompeia-nginx-exporter
    image: quay.io/martinhelmich/prometheus-nginxlog-exporter:v1
    depends_on:
      - pompeia-nginx
    volumes:
      - '../logs/bouncer-nginx:/mnt/nginxlogs'
      - '../configurations/exporter/nginx-exporter.hcl:/etc/nginx-exporter.hcl'
    command: '-config-file /etc/nginx-exporter.hcl'
    networks:
      - governify-pompeia
  ############### NGINX/CERTIFICATES ###############
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ../configurations/nginx/data/certbot/conf:/etc/letsencrypt
      - ../configurations/nginx/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  # ================================================
  pompeia-nginx:
    container_name: pompeia-nginx
    image: nginx
    environment:
      - POMPEIA_SERVICES_PREFIX=${SERVICES_PREFIX:?}
      - POMPEIA_DNS_SUFFIX=${DNS_SUFFIX:?}
    # ports:
    #   - '443:443'
    #   - '80:80'
    ulimits:
      nproc: 10240
      nofile:
        soft: 10240
        hard: 10240
    volumes:
      - '../configurations/nginx/config/nginx.conf:/etc/nginx/nginx.conf'
      - '../configurations/nginx/data/certbot/conf:/etc/letsencrypt'
      - '../configurations/nginx/config/static:/etc/nginx/static'
      - '../configurations/nginx/certs:/etc/nginx/certs'
      - '../configurations/nginx/config/services-nginx-config:/etc/nginx/templates'
      - '../configurations/nginx/data/certbot/www:/var/www/certbot'
      - '../logs/bouncer-nginx:/var/log/nginx'
    networks:
      - governify-pompeia
    mem_limit: 100m
    restart: 'on-failure:5'
  ############### MICROSERVICES ############### 
  pompeia-render:
    container_name: pompeia-render
    image: governify/render:v2.3.0
    environment:
      - NODE_ENV=production
      - PORT=80
      - LAYOUT=bootstrap5.html
      - LOGIN_USER=${USER_RENDER:?}
      - LOGIN_PASSWORD=${PASS_RENDER:?}
      - DEFAULT_VIEW=http://pompeia-assets-manager/api/v1/public/renders/index/view.html
      - DEFAULT_CONTROLLER=http://pompeia-assets-manager/api/v1/public/renders/index/controller.js
      - DEFAULT_MODEL=http://pompeia-assets-manager/api/v1/public/renders/index/model.json
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
      - NEW_RELIC_APP_NAME="Pompeia-Render"
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    networks:
      - governify-pompeia
    volumes:
      - '../logs/render:/opt/app/logs'
    depends_on:
      - pompeia-assets-manager
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-assets-manager:
    container_name: pompeia-assets-manager
    image: governify/assets-manager:v1.5.0
    environment:
      - NODE_ENV=production
      - PORT=80
      - LOGIN_USER=${USER_ASSETS:?}
      - LOGIN_PASSWORD=${PASS_ASSETS:?}
      - PRIVATE_KEY=${KEY_ASSETS_MANAGER_PRIVATE:?}
      - SERVICES_PREFIX=${SERVICES_PREFIX:?}
      - DNS_SUFFIX=${DNS_SUFFIX:?}
      - ASSETS_REPOSITORY=https://github.com/governify/assets-pompeia
      - ASSETS_REPOSITORY_BRANCH=${ASSETS_REPOSITORY_BRANCH:?}
      - NEW_RELIC_APP_NAME="Pompeia-Assets-Manager"
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    networks:
      - governify-pompeia
    volumes:
      - '../assets:/home/project'
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-reporter:
    container_name: pompeia-reporter
    image: governify/reporter:v2.9.1
    environment:
      - DB_HOST=influxdb
      - NODE_ENV=production
      - PORT=80
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
      - NEW_RELIC_APP_NAME="Pompeia-Reporter"
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    networks:
      - governify-pompeia
    volumes:
      - '../logs/pompeia-reporter:/opt/app/logs'
    mem_limit: 400m
    restart: 'unless-stopped'
    depends_on:
      - pompeia-assets-manager
      - pompeia-mongo-registry
      - pompeia-influx-reporter
  # ================================================
  pompeia-registry:
    container_name: pompeia-registry
    image: governify/registry:v3.8.0
    networks:
      - governify-pompeia
    environment:
      - DB_HOST=pompeia-mongo-registry
      - NODE_ENV=production
      - PORT=80
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
      - NEW_RELIC_APP_NAME="Pompeia-Registry"
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    volumes:
      - '../logs/registry:/opt/app/logs'
      - '../static:/opt/app/public/static'
    depends_on:
      - pompeia-assets-manager
      - pompeia-mongo-registry
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-collector-events:
    container_name: pompeia-collector-events
    image: governify/collector-events:v1.20.0
    environment:
      - NODE_ENV=production
      - PORT=80
      - REDIS_HOSTNAME=pompeia-redis-ec
      - KEY_SCOPE_MANAGER=${KEY_SCOPE_MANAGER}
      - KEY_GITHUB=${KEY_GITHUB}
      - KEY_PIVOTAL=${KEY_PIVOTAL}
      - KEY_TRAVIS_PUBLIC=${KEY_TRAVIS_PUBLIC}
      - KEY_TRAVIS_PRIVATE=${KEY_TRAVIS_PRIVATE}
      - KEY_HEROKU=${KEY_HEROKU}
      - KEY_CODECLIMATE=${KEY_CODECLIMATE}
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
      - NEW_RELIC_APP_NAME="Pompeia-Collector-Events"
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    networks:
      - governify-pompeia
    depends_on:
      - pompeia-assets-manager
      - pompeia-redis-ec
    # mem_limit: 700m
    restart: 'unless-stopped'
  # ================================================
  pompeia-dashboard:
    container_name: pompeia-dashboard
    image: governify/dashboard:latest
    environment:
      - NODE_ENV=production
      - INFLUX_URL=http://pompeia-influx-reporter:8086
      - GF_PATHS_PLUGINS=/usr/share/grafana/plugins
    networks:
      - governify-pompeia
    volumes:
      - 'pompeia-dashboard-volume:/var/lib/grafana'
    depends_on:
      - pompeia-assets-manager
      - pompeia-reporter
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-director:
    container_name: pompeia-director
    image: governify/director:v1.5.0
    environment:
      - NODE_ENV=production
      - PORT=80
      - KEY_ASSETS_MANAGER_PRIVATE=${KEY_ASSETS_MANAGER_PRIVATE}
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
      - INFLUXDB_BIND_ADDRESS=:8088
      - NEW_RELIC_APP_NAME="Pompeia-Director"
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    networks:
      - governify-pompeia
    depends_on:
      - pompeia-assets-manager
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-scope-manager:
    container_name: pompeia-scope-manager
    image: governify/scope-manager:v1.8.0
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - NODE_ENV=production
      - PORT=80
      - KEY_ASSETS_MANAGER_PRIVATE=${KEY_ASSETS_MANAGER_PRIVATE}
      - KEY_SCOPE_MANAGER=${KEY_SCOPE_MANAGER}
      - KEY_HEROKU=${KEY_HEROKU}
      - KEY_PIVOTAL=${KEY_PIVOTAL}
      - KEY_GITHUB=${KEY_GITHUB}
      - GOV_INFRASTRUCTURE=${GOV_INFRASTRUCTURE:?}
      - NEW_RELIC_APP_NAME="Pompeia-Scope-Manager"
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    networks:
      - governify-pompeia
    depends_on:
      - pompeia-assets-manager
    mem_limit: 400m
    restart: 'unless-stopped'
  # ================================================
  pompeia-join:
    container_name: pompeia-join
    image: governify/join-bluejay:v1.9.1
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - KEY_GITHUB=${KEY_GITHUB}
      - NODE_ENV=production
      - PORT=80
      - NEW_RELIC_APP_NAME="Pompeia-Join"
      - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
    networks:
      - governify-pompeia
    mem_limit: 400m
    restart: 'unless-stopped'
  ############### DATABASES ###############
  pompeia-influx-reporter:
    container_name: pompeia-influx-reporter
    image: 'influxdb:1.8.4-alpine'
    networks:
      - governify-pompeia
    volumes:
      - 'pompeia-influx-reporter-volume:/var/lib/influxdb'
      - '../configurations/influxdb:/etc/influxdb'
    mem_limit: 1200m
    restart: 'unless-stopped'
  # ================================================
  pompeia-mongo-registry:
    container_name: pompeia-mongo-registry
    image: mongo:6.0
    networks:
      - governify-pompeia
    volumes:
      - 'pompeia-mongo-registry-volume:/data/db'
    mem_limit: 2000m
    restart: 'unless-stopped'
  # ================================================
  pompeia-redis-ec:
    container_name: pompeia-redis-ec
    image: redis
    networks:
      - governify-pompeia
    volumes:
      - 'pompeia-redis-ec-volume:/data'
    mem_limit: 1200m
    restart: 'unless-stopped'
  # ================================================
  pompeia-tpa-designer:
    container_name: pompeia-tpa-designer
    image: 'governify/tpa-designer:1.0.0'
    environment:
      - NODE_ENV=production
      # - PORT=80
      - ASSETS_MANAGER_URL=${ASSETS_MANAGER_URL}
      - REGISTRY_URL=${REGISTRY_URL}
      - SCOPE_MANAGER_URL=${SCOPE_MANAGER_URL}
      - COLLECTOR_EVENTS_URL=${COLLECTOR_EVENTS_URL}
    ports:
      - '5173:5173'
    mem_limit: 700m
    restart: 'unless-stopped'
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: pompeia-gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        # Add any other gitlab.rb configuration here, each on its own line
        external_url 'https://gitlab.pompeia.governify.io'
    volumes:
      - './gldata/config:/etc/gitlab'
      - './gldata/logs:/var/log/gitlab'
      - './gldata/data:/var/opt/gitlab'
    shm_size: '256m'
    networks:
      - governify-pompeia
  jira:
    container_name: pompeia-jira
    image: atlassian/jira-software:latest
    volumes:
      - 'pompeia-jira:/var/atlassian/application-data/jira'
    networks:
      - governify-pompeia
volumes:
  pompeia-dashboard-volume: null
  pompeia-influx-reporter-volume: null
  pompeia-mongo-registry-volume: null
  pompeia-redis-ec-volume: null
  pompeia-jira: null
networks:
  governify-pompeia:
    external: true
